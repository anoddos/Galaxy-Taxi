@page "/auction/AuctionsList"
@using GalaxyTaxi.Shared.Api.Interfaces
@using GalaxyTaxi.Shared.Api.Models.Auction
@using GalaxyTaxi.Shared.Api.Models.Filters
@using GoogleMapsComponents
@using GoogleMapsComponents.Maps
@using Size = MudBlazor.Size
@inject IAuctionService AuctionService
@inject NavigationManager NavigationManager


<MudCheckBox @bind-Checked="@_auctionsFilter.IncludesMe" Label="Mine" Color="Color.Primary"></MudCheckBox>
<MudCheckBox @bind-Checked="@_auctionsFilter.IsFinished" Label="Finished" Color="Color.Primary"></MudCheckBox>
<MudCheckBox @bind-Checked="@_auctionsFilter.WonByMe" Label="Won By Me" Color="Color.Primary"></MudCheckBox>

<MudButton OnClick="async () => await UpdateGrid()" Variant="Variant.Filled" Size="Size.Small" Style="background-color: royalblue; color:white;">Search</MudButton>

<MudGrid>


    @foreach (var item in _auctionItems)
    {
        <MudItem xs="12">
            <MudPaper Elevation="3" Padding="16px" Class="auction-item">
                <div class="auction-item-map">
                    <GoogleMap @ref="@_map1" Options="@_mapOptions" Class="auction-item"></GoogleMap>
                </div>
                <div class="auction-item-details">
                    <h3>@item.Title</h3>
                    <ul>
                        @foreach (var location in item.Locations)
                        {
                            <li>@location</li>
                        }
                    </ul>
                    <p class="destination-location">@item.FinalLocation</p>
                </div>
                <div class="auction-item-price">
                    <p class="price">@item.Price</p>
                    <p class="bid-count">Bids: @item.BidCount</p>
                </div>
            </MudPaper>
        </MudItem>
    }
</MudGrid>

<style>


.auction-item {
    display: flex;
    flex-direction: column;
    margin: 20px 100px 20px;
}

.auction-item-map {
    height: 200px;
    width: 200px;
}

.auction-item-details {
    flex-grow: 1;
}

.destination-location {
    font-weight: bold;
}

.auction-item-price {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
}

.price {
    font-size: 18px;
    font-weight: bold;
}

.bid-count {
    font-size: 14px;
}

</style>


@code {

    private AuctionsFilter _auctionsFilter = new AuctionsFilter
    {
        IncludesMe = false,
        IsFinished = false,
        WonByMe = false
    };

    private List<AuctionItem> _auctionItems = new List<AuctionItem>();
    private GoogleMap _map1;
    private MapOptions _mapOptions;

    protected override async void OnInitialized()
    {
        _mapOptions = new MapOptions
        {
            Zoom = 13,
            Center = new LatLngLiteral
            {
                Lat = 40.333,
                Lng = 41.33
            },
            MapTypeId = MapTypeId.Roadmap
        };
    }

    protected override async Task OnInitializedAsync()
    {
        await GetAuctionData();
    }

    private async Task UpdateGrid()
    {
        _auctionItems.Clear();

        await GetAuctionData();
    }

    private async Task GetAuctionData()
    {
        var auctionInfos = (await AuctionService.GetAuction(_auctionsFilter)).Auctions;
        if (auctionInfos != null)
        {
            foreach (var auctionInfo in auctionInfos)
            {
                _auctionItems.Add(new AuctionItem
                    {
                        Title = auctionInfo.JourneyInfo.CustomerCompany.Name + "'s Auction",
                        BidCount = auctionInfo.Bids?.Count() ?? 0,
                        FinalLocation = auctionInfo.JourneyInfo.Office.Address.Name,
                        Locations = auctionInfo.JourneyInfo.Stops?.Select(x => x.Address.Name).ToList(),
                        Price = auctionInfo.Amount
                    });
            }
        }
    }

    private class AuctionItem : AuctionInfo
    {
        public string Title { get; set; }
        public List<string>? Locations { get; set; }
        public string FinalLocation { get; set; }
        public decimal Price { get; set; }
        public int BidCount { get; set; }
    }
}