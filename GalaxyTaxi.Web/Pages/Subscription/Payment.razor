@page "/subscription/payment"
@using GalaxyTaxi.Shared.Api.Models.Common;
@using GalaxyTaxi.Shared.Api.Interfaces
@inject ISubscriptionService SubscriptionService
@inject NavigationManager NavigationManager
@using System.Globalization

<MudCard Class="payment-card">
    <MudCardContent>
        <div class="header">
            <MudTypography Variant="TypographyVariant.H5">Subscription Payment</MudTypography>
        </div>

        <div class="subscription-details">
            <MudTypography Variant="TypographyVariant.Subtitle1" Class="mb-1">Subscription Type:</MudTypography>
            <MudTypography Variant="TypographyVariant.Body1">@SelectedSubscriptionType</MudTypography>

            <MudTypography Variant="TypographyVariant.Subtitle1" Class="mt-3 mb-1">Price:</MudTypography>
            <MudTypography Variant="TypographyVariant.Body1">@SubscriptionPrice.ToString("C", CultureInfo.CurrentCulture)</MudTypography>
        </div>

        <div class="payment-form">
            <MudTextField Label="Card Number" Class="mb-2" @bind-Value="CardNumber" />
            <div class="expiration-cvc">
                <MudTextField Label="Expiration Date" Class="mb-2" @bind-Value="ExpirationDate" />
                <MudTextField Label="CVC" Class="mb-2" @bind-Value="CVC" />
            </div>

            <div class="pay-button">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mt-3" OnClick="ProcessPayment">Pay Now</MudButton>
            </div>
        </div>
    </MudCardContent>
</MudCard>

@code {
    private SubscriptionPlanType SelectedSubscriptionType;
    private decimal SubscriptionPrice; 

    private string CardNumber;
    private string ExpirationDate;
    private string CVC;

    protected override async Task OnInitializedAsync()
    {
        var subscriptionDetails = await SubscriptionService.GetSubscriptionDetailsAsync();

        SubscriptionPrice = subscriptionDetails.Price;
        SelectedSubscriptionType = subscriptionDetails.SubscriptionPlanType;
    }
    
    private async Task ProcessPayment()
    {
    // You would handle the payment processing here, integrating with a payment gateway.
    // This is a placeholder and you should replace it with the actual payment logic.
    // After successful payment, you can navigate the user to a success page or perform other actions.
    // Example:
    // if (PaymentSuccessful)
    // {
    //     NavigationManager.NavigateTo("/payment-success");
    // }
    }
}