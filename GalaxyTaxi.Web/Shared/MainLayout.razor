@inherits LayoutComponentBase
@inject IDialogService DialogService
@inject NavigationManager NavigationManager

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(_ => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Galaxy Taxi</MudText>
        <MudSpacer />
        <MudMenu Class="" Label="Menu" Variant="Variant.Filled" Color="Color.Primary" Edge="Edge.Start">
            @if (!IsUserLoggedIn)
            {
                <MudMenuItem OnClick="@Login" Class="purple-menu-item">
                    <div class="d-flex align-center">
                        <MudText Class="ml-4">Login</MudText>
                    </div>
                </MudMenuItem>

                <MudMenuItem OnClick="@Register" Class="purple-menu-item">
                    <div class="d-flex align-center">
                        <MudText Class="ml-4" Color="Color.Inherit">Register</MudText>
                    </div>
                </MudMenuItem>
            }
            else
            {
                <MudMenuItem OnClick="@Logout" Color="Color.Inherit" Class="purple-menu-item">
                    <div class="d-flex align-center">
                        <MudText Class="ml-4">Logout</MudText>
                    </div>
                </MudMenuItem>
            }


        </MudMenu>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu></NavMenu>
    </MudDrawer>
    <MudMainContent MaxWidth="MaxWidth.Medium" Color="Color.Red">
        @Body
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen;
    bool IsUserLoggedIn;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        // TODO: check if the user is already logged in
        // Set the IsUserLoggedIn property based on the login status
        IsUserLoggedIn = IsUserLoggedInMethod();
    }

    // Example method to check if the user is logged in
    bool IsUserLoggedInMethod()
    {
        // TODO: Implement the actual logic to check if the user is logged in
        return IsUserLoggedIn;
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void Login()
    {
        NavigationManager.NavigateTo("account/login");

    }

    private void Register()
    {
        NavigationManager.NavigateTo("account/register");
    }

    private void Logout()
    {
        // TODO: Implement Logout logic here
    }
}
